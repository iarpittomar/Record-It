{"version":3,"sources":["redux/recorder.reducer.ts","redux/user-events.reducer.ts","lib/utils.ts","components/Calendar/Calendar.tsx","components/Recorder/Recorder.tsx","components/App/App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["START","STOP","selectorDateStart","rootState","recorder","selectRecorderState","dateStart","initState","recorderReducer","state","action","type","Date","toISOString","LOAD_SUCCESS","CREATE_SUCCESS","selectUserEventsArray","userEvents","selectUserEventsState","allIds","map","id","byIds","userEventsReducer","events","payload","reduce","event","addZero","num","mapDispatch","loadUserEvents","dispatch","getState","a","fetch","response","json","error","connector","connect","createDateKey","date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","groupedEvents","sortedGroupKeys","useEffect","length","groups","addToGroup","dateKey","undefined","push","forEach","dateStartKey","dateEndKey","dateEnd","groupEventsByDay","Object","keys","sort","date1","date2","Flex","direction","m","p","overflowX","dayKey","groupDate","getDate","toLocaleString","PseudoBox","flex","fontSize","textAlign","Text","bg","borderRadius","color","display","fontWeight","justify","flexWrap","align","lineHeight","title","Button","appearance","border","cursor","flexShrink","height","width","Recorder","useDispatch","useSelector","started","interval","useRef","useState","setCount","window","clearInterval","current","seconds","Math","floor","now","getTime","hours","minutes","size","onClick","method","headers","body","JSON","stringify","createdEvent","setInterval","count","verticalAlign","transition","App","ThemeProvider","CSSReset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79677674.chunk.js","sourcesContent":["import { Action } from 'redux';\nimport { RootState } from './store';\n\ninterface RecorderState {\n  dateStart: string;\n}\n\nconst START = 'recorder/start';\nconst STOP = 'recorder/stop';\n\ntype StartAction = Action<typeof START>;\ntype StopAction = Action<typeof STOP>;\n\nexport const start = (): StartAction => ({\n  type: START,\n});\n\nexport const stop = (): StopAction => ({\n  type: STOP,\n});\n\nexport const selectRecorderState = (rootState: RootState) => rootState.recorder;\n\nexport const selectorDateStart = (rootState: RootState) =>\n  selectRecorderState(rootState).dateStart;\n\nconst initState: RecorderState = {\n  dateStart: '',\n};\n\nconst recorderReducer = (\n  state: RecorderState = initState,\n  action: StartAction | StopAction\n) => {\n  switch (action.type) {\n    case START:\n      return { ...state, dateStart: new Date().toISOString() };\n\n    case STOP:\n      return { ...state, dateStart: '' };\n\n    default:\n      return state;\n  }\n};\n\nexport default recorderReducer;\n","import { Action, AnyAction } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { selectorDateStart } from './recorder.reducer';\nimport { RootState } from './store';\n\nexport interface IUserEvent {\n  id: number;\n  title: string;\n  dateStart: string;\n  dateEnd: string;\n}\n\ninterface IUserEventState {\n  byIds: Record<IUserEvent['id'], IUserEvent>;\n  allIds: IUserEvent['id'][];\n}\n\nconst LOAD_REQUEST = 'userEvents/load_request';\n\ninterface LoadRequestAction extends Action<typeof LOAD_REQUEST> {}\n\nconst LOAD_SUCCESS = 'userEvents/load_success';\n\ninterface LoadSuccessAction extends Action<typeof LOAD_SUCCESS> {\n  payload: {\n    events: IUserEvent[];\n  };\n}\n\nconst LOAD_ERROR = 'userEvents/load_error';\n\ninterface LoadErrorAction extends Action<typeof LOAD_ERROR> {\n  error: string;\n}\n\nexport const loadUserEvents = (): ThunkAction<\n  void,\n  RootState,\n  undefined,\n  LoadRequestAction | LoadSuccessAction | LoadErrorAction\n> => async (dispatch, getState) => {\n  dispatch({\n    type: LOAD_REQUEST,\n  });\n\n  try {\n    const response = await fetch('http://localhost:3001/events');\n    const events: IUserEvent[] = await response.json();\n    dispatch({\n      type: LOAD_SUCCESS,\n      payload: { events },\n    });\n  } catch (e) {\n    dispatch({\n      type: LOAD_ERROR,\n      error: 'Failed to dispatch',\n    });\n  }\n};\n\nconst CREATE_REQUEST = 'userEvents/crate_request';\ninterface CreateRequestAction extends Action<typeof CREATE_REQUEST> {}\n\nconst CREATE_SUCCESS = 'userEvents/create_success';\ninterface CreateSuccessAction extends Action<typeof CREATE_SUCCESS> {\n  payload: {\n    event: IUserEvent;\n  };\n}\n\nconst CREATE_FAILURE = 'userEvents/create_failure';\ninterface CreateFailureAction extends Action<typeof CREATE_FAILURE> {}\n\nexport const createUserEvent = (): ThunkAction<\n  Promise<void>,\n  RootState,\n  undefined,\n  CreateRequestAction | CreateSuccessAction | CreateFailureAction\n> => async (dispatch, getState) => {\n  dispatch({\n    type: CREATE_REQUEST,\n  });\n\n  try {\n    const dateStart = selectorDateStart(getState());\n    const event: Omit<IUserEvent, 'id'> = {\n      title: 'No Name',\n      dateStart,\n      dateEnd: new Date().toISOString(),\n    };\n    const response = await fetch('http://localhost:3001/events', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(event),\n    });\n\n    const createdEvent: IUserEvent = await response.json();\n\n    dispatch({\n      type: CREATE_SUCCESS,\n      payload: { event: createdEvent },\n    });\n  } catch (e) {\n    dispatch({\n      type: CREATE_FAILURE,\n    });\n  }\n};\n\nconst selectUserEventsState = (rootState: RootState) => rootState.userEvents;\n\nexport const selectUserEventsArray = (rootState: RootState) => {\n  const state = selectUserEventsState(rootState);\n  return state.allIds.map((id) => state.byIds[id]);\n};\n\nconst initState: IUserEventState = {\n  byIds: {},\n  allIds: [],\n};\n\nconst userEventsReducer = (\n  state: IUserEventState = initState,\n  action: LoadSuccessAction | CreateSuccessAction\n) => {\n  switch (action.type) {\n    case LOAD_SUCCESS:\n      const { events } = action.payload;\n      return {\n        ...state,\n        allIds: events.map(({ id }) => id),\n        byIds: events.reduce<IUserEventState['byIds']>((byIds, event) => {\n          byIds[event.id] = event;\n          return byIds;\n        }, {}),\n      };\n\n    case CREATE_SUCCESS:\n      const { event } = action.payload;\n      return {\n        ...state,\n        allIds: [...state.allIds, event.id],\n        byIds: { ...state.byIds, [event.id]: event },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userEventsReducer;\n","export const addZero = (num: number) => (num < 10 ? `0${num}` : `${num}`);\n","import React, { useEffect } from 'react';\nimport { Button, Flex, PseudoBox, Text } from '@chakra-ui/core';\nimport { RootState } from '../../redux/store';\nimport {\n  selectUserEventsArray,\n  loadUserEvents,\n  IUserEvent,\n} from '../../redux/user-events.reducer';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { addZero } from '../../lib/utils';\nimport { create } from 'domain';\n\nconst mapState = (state: RootState) => ({\n  events: selectUserEventsArray(state),\n});\n\nconst mapDispatch = {\n  loadUserEvents,\n};\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ninterface IProps extends PropsFromRedux {}\n\nconst createDateKey = (date: Date) => {\n  const year = date.getUTCFullYear();\n  const month = date.getUTCMonth() + 1;\n  const day = date.getUTCDate();\n  return `${addZero(year)}-${addZero(month)}-${addZero(day)}`;\n};\n\nconst groupEventsByDay = (events: IUserEvent[]) => {\n  const groups: Record<string, IUserEvent[]> = {};\n\n  const addToGroup = (dateKey: string, event: IUserEvent) => {\n    if (groups[dateKey] === undefined) {\n      groups[dateKey] = [];\n    }\n    groups[dateKey].push(event);\n  };\n\n  events.forEach((event) => {\n    const dateStartKey = createDateKey(new Date(event.dateStart));\n    const dateEndKey = createDateKey(new Date(event.dateEnd));\n\n    addToGroup(dateStartKey, event);\n\n    if (dateEndKey !== dateStartKey) {\n      addToGroup(dateStartKey, event);\n    }\n  });\n\n  return groups;\n};\n\nconst Calendar: React.FC<IProps> = ({ events, loadUserEvents }) => {\n  useEffect(() => {\n    loadUserEvents();\n  }, []);\n\n  let groupedEvents: ReturnType<typeof groupEventsByDay> | undefined;\n\n  let sortedGroupKeys: string[] | undefined;\n\n  if (events.length) {\n    groupedEvents = groupEventsByDay(events);\n    sortedGroupKeys = Object.keys(groupedEvents).sort(\n      (date1, date2) => +new Date(date2) - +new Date(date1)\n    );\n  }\n  return groupedEvents && sortedGroupKeys ? (\n    <Flex direction=\"row-reverse\" m=\"0 15px\" p=\"20px 0\" overflowX=\"auto\">\n      {sortedGroupKeys.map((dayKey) => {\n        const events = groupedEvents![dayKey];\n        const groupDate = new Date(dayKey);\n        const day = groupDate.getDate();\n        const month = groupDate.toLocaleString(undefined, { month: 'long' });\n        return (\n          <PseudoBox flex=\"0 0 300px\" p=\"0 20px\">\n            <PseudoBox fontSize=\"16px\" m=\"0 0 15px\" textAlign=\"center\">\n              <Text\n                bg=\"#bae8e8\"\n                borderRadius=\"4px\"\n                color=\"#272343\"\n                display=\"inline-block\"\n                fontWeight=\"bold\"\n                p=\"4px 8px\"\n              >\n                {day} {month}\n              </Text>\n            </PseudoBox>\n            <PseudoBox>\n              {events.map((event) => {\n                return (\n                  <Flex\n                    key={event.id}\n                    justify=\"space-between\"\n                    flexWrap=\"wrap\"\n                    m=\"0 0 10px\"\n                    p=\"8px 14px\"\n                    align=\"flex-start\"\n                    bg=\"#e3f6f5\"\n                    borderRadius=\"4px\"\n                  >\n                    <PseudoBox flex=\"1 64%\" lineHeight=\"23px\">\n                      <Text fontSize=\"0.8em\">10:00 - 12:00</Text>\n                      <Text>{event.title}</Text>\n                    </PseudoBox>\n                    <Button\n                      appearance=\"none\"\n                      bg=\"none\"\n                      border=\"0\"\n                      cursor=\"pointer\"\n                      flexShrink=\"initial\"\n                      height=\"23px\"\n                      fontSize=\"18px\"\n                      lineHeight=\"20px\"\n                      m=\"0 0 0 10px\"\n                      p=\"0\"\n                      width=\"23px\"\n                    >\n                      &times;\n                    </Button>\n                  </Flex>\n                );\n              })}\n            </PseudoBox>\n          </PseudoBox>\n        );\n      })}\n    </Flex>\n  ) : (\n    <p>Loading...</p>\n  );\n};\n\nexport default connector(Calendar);\n","import { Button, Flex, PseudoBox } from '@chakra-ui/core';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { start, stop, selectorDateStart } from '../../redux/recorder.reducer';\nimport { createUserEvent } from '../../redux/user-events.reducer';\n\nconst addZero = (num: number) => (num < 10 ? `0${num}` : `${num}`);\n\nconst Recorder = () => {\n  const dispatch = useDispatch();\n  const dateStart = useSelector(selectorDateStart);\n  const started = dateStart !== '';\n  let interval = useRef<number>(0);\n  const [, setCount] = useState<number>(0);\n\n  const handleClick = () => {\n    if (started) {\n      window.clearInterval(interval.current);\n      dispatch(createUserEvent());\n      dispatch(stop());\n    } else {\n      dispatch(start());\n      interval.current = window.setInterval(() => {\n        setCount((count) => count + 1);\n      }, 1000);\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      window.clearInterval(interval.current);\n    };\n  }, []);\n\n  let seconds = started\n    ? Math.floor((Date.now() - new Date(dateStart).getTime()) / 1000)\n    : 0;\n\n  const hours = seconds ? Math.floor(seconds / 60 / 60) : 0;\n  seconds = seconds - hours * 60 * 60;\n  const minutes = seconds ? Math.floor(seconds / 60) : 0;\n  seconds = seconds - minutes * 60;\n\n  return (\n    <Flex align=\"center\" justify=\"center\" m=\"60px 0 40px\">\n      <Button\n        size=\"md\"\n        height=\"60px\"\n        width=\"60px\"\n        bg=\"#e3f6f5\"\n        cursor=\"pointer\"\n        borderRadius=\"50%\"\n        border=\"0\"\n        onClick={handleClick}\n      >\n        <PseudoBox\n          bg=\"#f25042\"\n          borderRadius={started ? '0' : '50%'}\n          display=\"inline-block\"\n          height={started ? '22px' : '24px'}\n          verticalAlign=\"middle\"\n          width={started ? '22px' : '24px'}\n          transition=\"all 0.3s ease-out\"\n        ></PseudoBox>\n      </Button>\n      <PseudoBox m=\"0 0 0 15px\" textAlign=\"center\" width=\"80px\">\n        {addZero(hours)}:{addZero(minutes)}:{addZero(seconds)}\n      </PseudoBox>\n    </Flex>\n  );\n};\n\nexport default Recorder;\n","import { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport React from 'react';\nimport Calendar from '../Calendar';\nimport Recorder from '../Recorder';\nimport './App.css';\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <CSSReset />\n      <Recorder />\n      <Calendar />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport recorderReducer from './recorder.reducer';\nimport userEventsReducer from './user-events.reducer';\n\nconst rootReducer = combineReducers({\n  userEvents: userEventsReducer,\n  recorder: recorderReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}