{"version":3,"sources":["redux/recorder.reducer.ts","redux/user-events.reducer.ts","lib/utils.ts","components/Calendar/Calendar.tsx","components/Recorder/Recorder.tsx","components/Warning/Warning.tsx","components/App/App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["START","STOP","PAUSE","start","type","selectRecorderState","rootState","recorder","selectorDateStart","dateStart","selectorCount","count","initState","recorderReducer","state","action","Date","toISOString","console","log","payload","LOAD_SUCCESS","CREATE_SUCCESS","selectUserEventsArray","userEvents","selectUserEventsState","allIds","map","id","byIds","userEventsReducer","events","reduce","event","addZero","num","mapDispatch","loadUserEvents","dispatch","getState","a","fetch","response","json","error","connector","connect","createDateKey","date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","groupedEvents","useEffect","length","groups","addToGroup","dateKey","undefined","push","forEach","dateStartKey","dateEndKey","dateEnd","groupEventsByDay","Object","keys","sort","date1","date2","Flex","direction","m","p","overflowX","PseudoBox","flex","fontSize","textAlign","Text","bg","borderRadius","color","display","fontWeight","justify","flexWrap","align","lineHeight","Button","appearance","border","cursor","flexShrink","height","width","Recorder","useDispatch","useSelector","countFromState","started","interval","useRef","useState","setCount","isPaused","setPause","window","clearInterval","current","seconds","Math","floor","now","getTime","hours","minutes","size","onClick","title","method","headers","body","JSON","stringify","createdEvent","setInterval","verticalAlign","transition","ml","lastCount","Box","as","MdPause","MdPlayArrow","showVideo","Warning","Alert","status","App","ThemeProvider","CSSReset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7773e0e9.chunk.js","sourcesContent":["import { type } from 'os';\nimport { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { RootState } from './store';\n\ninterface RecorderState {\n  dateStart: string;\n  count: number;\n}\n\nconst START = 'recorder/start';\nconst STOP = 'recorder/stop';\nconst PAUSE = 'recorder/pause';\n\ntype StartAction = Action<typeof START>;\ntype StopAction = Action<typeof STOP>;\n\nexport const start = (): StartAction => ({\n  type: START,\n});\n\nexport const stop = (): StopAction => ({\n  type: STOP,\n});\n\ninterface PauseAction extends Action<typeof PAUSE> {\n  payload: {\n    count: number;\n  };\n}\n\nexport const pause = (count: number): PauseAction => ({\n  type: PAUSE,\n  payload: {\n    count: count,\n  },\n});\n\nexport const selectRecorderState = (rootState: RootState) => rootState.recorder;\n\nexport const selectorDateStart = (rootState: RootState) =>\n  selectRecorderState(rootState).dateStart;\n\nexport const selectorCount = (rootState: RootState) =>\n  selectRecorderState(rootState).count;\n\nconst initState: RecorderState = {\n  dateStart: '',\n  count: 0,\n};\n\nconst recorderReducer = (\n  state: RecorderState = initState,\n  action: StartAction | StopAction | PauseAction\n) => {\n  switch (action.type) {\n    case START:\n      return {\n        ...state,\n        dateStart: new Date().toISOString(),\n        count: 0,\n      };\n\n    case STOP:\n      return { ...state, dateStart: '', count: 0 };\n\n    case PAUSE:\n      console.log({ ...state });\n      return { ...state, dateStart: '', count: action.payload.count };\n\n    default:\n      return state;\n  }\n};\n\nexport default recorderReducer;\n","import { Action, AnyAction } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { selectorDateStart } from './recorder.reducer';\nimport { RootState } from './store';\n\nexport interface IUserEvent {\n  id: number;\n  title: string;\n  dateStart: string;\n  dateEnd: string;\n}\n\ninterface IUserEventState {\n  byIds: Record<IUserEvent['id'], IUserEvent>;\n  allIds: IUserEvent['id'][];\n}\n\nconst LOAD_REQUEST = 'userEvents/load_request';\n\ninterface LoadRequestAction extends Action<typeof LOAD_REQUEST> {}\n\nconst LOAD_SUCCESS = 'userEvents/load_success';\n\ninterface LoadSuccessAction extends Action<typeof LOAD_SUCCESS> {\n  payload: {\n    events: IUserEvent[];\n  };\n}\n\nconst LOAD_ERROR = 'userEvents/load_error';\n\ninterface LoadErrorAction extends Action<typeof LOAD_ERROR> {\n  error: string;\n}\n\nexport const loadUserEvents = (): ThunkAction<\n  void,\n  RootState,\n  undefined,\n  LoadRequestAction | LoadSuccessAction | LoadErrorAction\n> => async (dispatch, getState) => {\n  dispatch({\n    type: LOAD_REQUEST,\n  });\n\n  try {\n    const response = await fetch('http://localhost:3001/events');\n    const events: IUserEvent[] = await response.json();\n    dispatch({\n      type: LOAD_SUCCESS,\n      payload: { events },\n    });\n  } catch (e) {\n    dispatch({\n      type: LOAD_ERROR,\n      error: 'Failed to dispatch',\n    });\n  }\n};\n\nconst CREATE_REQUEST = 'userEvents/crate_request';\ninterface CreateRequestAction extends Action<typeof CREATE_REQUEST> {}\n\nconst CREATE_SUCCESS = 'userEvents/create_success';\ninterface CreateSuccessAction extends Action<typeof CREATE_SUCCESS> {\n  payload: {\n    event: IUserEvent;\n  };\n}\n\nconst CREATE_FAILURE = 'userEvents/create_failure';\ninterface CreateFailureAction extends Action<typeof CREATE_FAILURE> {}\n\nexport const createUserEvent = (): ThunkAction<\n  Promise<void>,\n  RootState,\n  undefined,\n  CreateRequestAction | CreateSuccessAction | CreateFailureAction\n> => async (dispatch, getState) => {\n  dispatch({\n    type: CREATE_REQUEST,\n  });\n\n  try {\n    const dateStart = selectorDateStart(getState());\n    const event: Omit<IUserEvent, 'id'> = {\n      title: 'No Name',\n      dateStart,\n      dateEnd: new Date().toISOString(),\n    };\n    const response = await fetch('http://localhost:3001/events', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(event),\n    });\n\n    const createdEvent: IUserEvent = await response.json();\n\n    dispatch({\n      type: CREATE_SUCCESS,\n      payload: { event: createdEvent },\n    });\n  } catch (e) {\n    dispatch({\n      type: CREATE_FAILURE,\n    });\n  }\n};\n\nconst selectUserEventsState = (rootState: RootState) => rootState.userEvents;\n\nexport const selectUserEventsArray = (rootState: RootState) => {\n  const state = selectUserEventsState(rootState);\n  return state.allIds.map((id) => state.byIds[id]);\n};\n\nconst initState: IUserEventState = {\n  byIds: {},\n  allIds: [],\n};\n\nconst userEventsReducer = (\n  state: IUserEventState = initState,\n  action: LoadSuccessAction | CreateSuccessAction\n) => {\n  switch (action.type) {\n    case LOAD_SUCCESS:\n      const { events } = action.payload;\n      return {\n        ...state,\n        allIds: events.map(({ id }) => id),\n        byIds: events.reduce<IUserEventState['byIds']>((byIds, event) => {\n          byIds[event.id] = event;\n          return byIds;\n        }, {}),\n      };\n\n    case CREATE_SUCCESS:\n      const { event } = action.payload;\n      return {\n        ...state,\n        allIds: [...state.allIds, event.id],\n        byIds: { ...state.byIds, [event.id]: event },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userEventsReducer;\n","export const addZero = (num: number) => (num < 10 ? `0${num}` : `${num}`);\n","import React, { useEffect } from 'react';\nimport { Button, Flex, PseudoBox, Text } from '@chakra-ui/core';\nimport { RootState } from '../../redux/store';\nimport {\n  selectUserEventsArray,\n  loadUserEvents,\n  IUserEvent,\n} from '../../redux/user-events.reducer';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { addZero } from '../../lib/utils';\nimport { create } from 'domain';\n\nconst mapState = (state: RootState) => ({\n  events: selectUserEventsArray(state),\n});\n\nconst mapDispatch = {\n  loadUserEvents,\n};\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ninterface IProps extends PropsFromRedux {}\n\nconst createDateKey = (date: Date) => {\n  const year = date.getUTCFullYear();\n  const month = date.getUTCMonth() + 1;\n  const day = date.getUTCDate();\n  return `${addZero(year)}-${addZero(month)}-${addZero(day)}`;\n};\n\nconst groupEventsByDay = (events: IUserEvent[]) => {\n  const groups: Record<string, IUserEvent[]> = {};\n\n  const addToGroup = (dateKey: string, event: IUserEvent) => {\n    if (groups[dateKey] === undefined) {\n      groups[dateKey] = [];\n    }\n    groups[dateKey].push(event);\n  };\n\n  events.forEach((event) => {\n    const dateStartKey = createDateKey(new Date(event.dateStart));\n    const dateEndKey = createDateKey(new Date(event.dateEnd));\n\n    addToGroup(dateStartKey, event);\n\n    if (dateEndKey !== dateStartKey) {\n      addToGroup(dateStartKey, event);\n    }\n  });\n\n  return groups;\n};\n\nconst Calendar: React.FC<IProps> = ({ events, loadUserEvents }) => {\n  useEffect(() => {\n    loadUserEvents();\n  }, []);\n\n  let groupedEvents: ReturnType<typeof groupEventsByDay> | undefined;\n\n  let sortedGroupKeys: string[] | undefined;\n\n  if (events.length) {\n    groupedEvents = groupEventsByDay(events);\n    sortedGroupKeys = Object.keys(groupedEvents).sort(\n      (date1, date2) => +new Date(date2) - +new Date(date1)\n    );\n  }\n  // return groupedEvents && sortedGroupKeys ? (\n  //   <Flex direction=\"row-reverse\" m=\"0 15px\" p=\"20px 0\" overflowX=\"auto\">\n  //     {sortedGroupKeys.map((dayKey) => {\n  //       const events = groupedEvents![dayKey];\n  //       const groupDate = new Date(dayKey);\n  //       const day = groupDate.getDate();\n  //       const month = groupDate.toLocaleString(undefined, { month: 'long' });\n  //       return (\n  //         <PseudoBox flex=\"0 0 300px\" p=\"0 20px\">\n  //           <PseudoBox fontSize=\"16px\" m=\"0 0 15px\" textAlign=\"center\">\n  //             <Text\n  //               bg=\"#bae8e8\"\n  //               borderRadius=\"4px\"\n  //               color=\"#272343\"\n  //               display=\"inline-block\"\n  //               fontWeight=\"bold\"\n  //               p=\"4px 8px\"\n  //             >\n  //               {day} {month}\n  //             </Text>\n  //           </PseudoBox>\n  //           <PseudoBox>\n  //             {events.map((event) => {\n  //               return (\n  //                 <Flex\n  //                   key={event.id}\n  //                   justify=\"space-between\"\n  //                   flexWrap=\"wrap\"\n  //                   m=\"0 0 10px\"\n  //                   p=\"8px 14px\"\n  //                   align=\"flex-start\"\n  //                   bg=\"#e3f6f5\"\n  //                   borderRadius=\"4px\"\n  //                 >\n  //                   <PseudoBox flex=\"1 64%\" lineHeight=\"23px\">\n  //                     <Text fontSize=\"0.8em\">10:00 - 12:00</Text>\n  //                     <Text>{event.title}</Text>\n  //                   </PseudoBox>\n  //                   <Button\n  //                     appearance=\"none\"\n  //                     bg=\"none\"\n  //                     border=\"0\"\n  //                     cursor=\"pointer\"\n  //                     flexShrink=\"initial\"\n  //                     height=\"23px\"\n  //                     fontSize=\"18px\"\n  //                     lineHeight=\"20px\"\n  //                     m=\"0 0 0 10px\"\n  //                     p=\"0\"\n  //                     width=\"23px\"\n  //                   >\n  //                     &times;\n  //                   </Button>\n  //                 </Flex>\n  //               );\n  //             })}\n  //           </PseudoBox>\n  //         </PseudoBox>\n  //       );\n  //     })}\n  //   </Flex>\n  // ) : (\n  //   <p>Loading...</p>\n  // );\n  return (\n    <Flex direction=\"row-reverse\" m=\"0 15px\" p=\"20px 0\" overflowX=\"auto\">\n      <PseudoBox flex=\"0 0 300px\" p=\"0 20px\">\n        <PseudoBox fontSize=\"16px\" m=\"0 0 15px\" textAlign=\"center\">\n          <Text\n            bg=\"#bae8e8\"\n            borderRadius=\"4px\"\n            color=\"#272343\"\n            display=\"inline-block\"\n            fontWeight=\"bold\"\n            p=\"4px 8px\"\n          >\n            16 Nov\n          </Text>\n        </PseudoBox>\n        <PseudoBox>\n          <Flex\n            justify=\"space-between\"\n            flexWrap=\"wrap\"\n            m=\"0 0 10px\"\n            p=\"8px 14px\"\n            align=\"flex-start\"\n            bg=\"#e3f6f5\"\n            borderRadius=\"4px\"\n          >\n            <PseudoBox flex=\"1 64%\" lineHeight=\"23px\">\n              <Text fontSize=\"0.8em\">10:00 - 12:00</Text>\n              <Text>Water the plants</Text>\n            </PseudoBox>\n            <Button\n              appearance=\"none\"\n              bg=\"none\"\n              border=\"0\"\n              cursor=\"pointer\"\n              flexShrink=\"initial\"\n              height=\"23px\"\n              fontSize=\"18px\"\n              lineHeight=\"20px\"\n              m=\"0 0 0 10px\"\n              p=\"0\"\n              width=\"23px\"\n            >\n              &times;\n            </Button>\n          </Flex>\n        </PseudoBox>\n      </PseudoBox>\n\n      <PseudoBox flex=\"0 0 300px\" p=\"0 20px\">\n        <PseudoBox fontSize=\"16px\" m=\"0 0 15px\" textAlign=\"center\">\n          <Text\n            bg=\"#bae8e8\"\n            borderRadius=\"4px\"\n            color=\"#272343\"\n            display=\"inline-block\"\n            fontWeight=\"bold\"\n            p=\"4px 8px\"\n          >\n            14 Nov\n          </Text>\n        </PseudoBox>\n        <PseudoBox>\n          <Flex\n            justify=\"space-between\"\n            flexWrap=\"wrap\"\n            m=\"0 0 10px\"\n            p=\"8px 14px\"\n            align=\"flex-start\"\n            bg=\"#e3f6f5\"\n            borderRadius=\"4px\"\n          >\n            <PseudoBox flex=\"1 64%\" lineHeight=\"23px\">\n              <Text fontSize=\"0.8em\">10:00 - 12:00</Text>\n              <Text>Birthday Party</Text>\n            </PseudoBox>\n            <Button\n              appearance=\"none\"\n              bg=\"none\"\n              border=\"0\"\n              cursor=\"pointer\"\n              flexShrink=\"initial\"\n              height=\"23px\"\n              fontSize=\"18px\"\n              lineHeight=\"20px\"\n              m=\"0 0 0 10px\"\n              p=\"0\"\n              width=\"23px\"\n            >\n              &times;\n            </Button>\n          </Flex>\n        </PseudoBox>\n      </PseudoBox>\n    </Flex>\n  );\n};\n\nexport default connector(Calendar);\n","import { Box, Button, Flex, PseudoBox } from '@chakra-ui/core';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  start,\n  stop,\n  selectorDateStart,\n  pause,\n  selectorCount,\n} from '../../redux/recorder.reducer';\nimport { createUserEvent } from '../../redux/user-events.reducer';\nimport { MdPlayArrow, MdPause } from 'react-icons/md';\n\nconst addZero = (num: number) => (num < 10 ? `0${num}` : `${num}`);\n\nconst Recorder = () => {\n  const dispatch = useDispatch();\n  const dateStart = useSelector(selectorDateStart);\n  const countFromState = useSelector(selectorCount);\n  const started = dateStart !== '';\n  let interval = useRef<number>(0);\n  let [count, setCount] = useState<number>(countFromState);\n  const [isPaused, setPause] = useState<Boolean>(false);\n\n  const handleClick = () => {\n    if (started) {\n      window.clearInterval(interval.current);\n      dispatch(createUserEvent());\n      setPause(false);\n      dispatch(stop());\n    } else {\n      dispatch(start());\n      setPause(true);\n      interval.current = window.setInterval(() => {\n        setCount((count) => count + 1);\n      }, 1000);\n    }\n  };\n\n  const handlePause = () => {\n    let lastCount = count;\n    if (!!isPaused) {\n      setPause(false);\n      window.clearInterval(interval.current);\n    } else {\n      setPause(true);\n      dispatch(start());\n      interval.current = window.setInterval(() => {\n        lastCount = lastCount + 1;\n        setCount(lastCount);\n      }, 1000);\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      window.clearInterval(interval.current);\n    };\n  }, []);\n\n  let seconds = started\n    ? Math.floor((Date.now() - new Date(dateStart).getTime()) / 1000)\n    : 0;\n\n  const hours = seconds ? Math.floor(seconds / 60 / 60) : 0;\n  seconds = seconds - hours * 60 * 60;\n  const minutes = seconds ? Math.floor(seconds / 60) : 0;\n  seconds = seconds - minutes * 60;\n\n  return (\n    <Flex align=\"center\" justify=\"center\" m=\"60px 0 40px\">\n      <Button\n        size=\"md\"\n        height=\"60px\"\n        width=\"60px\"\n        bg=\"#e3f6f5\"\n        cursor=\"pointer\"\n        borderRadius=\"50%\"\n        border=\"0\"\n        onClick={handleClick}\n      >\n        <PseudoBox\n          bg=\"#f25042\"\n          borderRadius={started ? '0' : '50%'}\n          display=\"inline-block\"\n          height={started ? '22px' : '24px'}\n          verticalAlign=\"middle\"\n          width={started ? '22px' : '24px'}\n          transition=\"all 0.3s ease-out\"\n        ></PseudoBox>\n      </Button>\n      <Button\n        size=\"md\"\n        height=\"60px\"\n        width=\"60px\"\n        bg=\"#e3f6f5\"\n        ml=\"10px\"\n        cursor=\"pointer\"\n        borderRadius=\"50%\"\n        border=\"0\"\n        onClick={handlePause}\n      >\n        {!isPaused ? (\n          <Box as={MdPlayArrow} size=\"40px\" color=\"green.400\"></Box>\n        ) : (\n          <Box as={MdPause} size=\"40px\" color=\"red.400\"></Box>\n        )}\n      </Button>\n      <PseudoBox m=\"0 0 0 15px\" textAlign=\"center\" width=\"80px\">\n        {addZero(hours)}:{addZero(minutes)}:{addZero(seconds)}\n      </PseudoBox>\n    </Flex>\n  );\n};\n\nexport default Recorder;\n","import { Alert, AlertIcon } from '@chakra-ui/core';\nimport React, { FC } from 'react';\n\nconst Warning = () => {\n  return (\n    <div>\n      <Alert onClick={showVideo} status=\"warning\">\n        <AlertIcon />\n        There is some problem with the deployment.\n      </Alert>\n    </div>\n  );\n};\n\nconst showVideo = () => {\n  return <div>I am here</div>;\n};\n\nexport default Warning;\n","import { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport React from 'react';\nimport Calendar from '../Calendar';\nimport Recorder from '../Recorder';\nimport Warning from '../Warning';\nimport './App.css';\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <CSSReset />\n      <Warning />\n      <Recorder />\n      <Calendar />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport recorderReducer from './recorder.reducer';\nimport userEventsReducer from './user-events.reducer';\n\nconst rootReducer = combineReducers({\n  userEvents: userEventsReducer,\n  recorder: recorderReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}